openapi: 3.0.2
info:
  title: Moo've
  description: ""
  contact:
    email: moove@digicow.net
  version: 1.1.0
servers:
  - url: https://moove.digicowsoftware.com/api/v1
security:
  - user: []
paths:
  /auth/login:
    post:
      security:
        - auth: []
      summary: Initiate an authenticated login session
      x-mojo-to: Auth#login
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginSession"
  /auth/status:
    get:
      security: []
      summary: Find out whether the user is logged in
      x-mojo-to: Auth#status
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginSession"
  /auth/logout:
    post:
      security: []
      summary: End a login session
      x-mojo-to: Auth#logout
      responses:
        204:
          description: Success
          content:
            text/plain:
              schema:
                type: string
  /users/{user}/events/series/{id}:
    get:
      summary: Get the events in a particular series for a user
      x-mojo-to: EventSeries#list
      parameters:
        - $ref: "#/components/parameters/UserID"
        - $ref: "#/components/parameters/SubjectID"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  series:
                    $ref: "#/components/schemas/EventSeries"
                  events:
                    type: array
                    items:
                      $ref: "#/components/schemas/RegisteredEvent"
  /users/{user}/events:
    get:
      summary: Get the list of events for a user
      x-mojo-to: Event#list
      parameters:
        - $ref: "#/components/parameters/UserID"
        - in: query
          name: year
          description: year of event
          required: false
          schema:
            type: integer
        - in: query
          name: sequenceID
          description: Event Sequence Identifier
          required: false
          schema:
            type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RegisteredEvent"
  /users/{user}/events/{id}:
    get:
      summary: Get the details for an event
      x-mojo-to: Event#get
      parameters:
        - $ref: "#/components/parameters/UserID"
        - $ref: "#/components/parameters/SubjectID"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  event:
                    $ref: "#/components/schemas/RegisteredEvent"
                  links:
                    $ref: "#/components/schemas/EventLinks"
  /users/{user}/goals:
    get:
      summary: Get goals and goal fulfillments for a user
      x-mojo-to: Goal#list
      parameters:
        - $ref: "#/components/parameters/UserID"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  personalRecords:
                    type: array
                    items:
                      $ref: "#/components/schemas/Goal"
                  achievements:
                    type: array
                    items:
                      $ref: "#/components/schemas/Goal"
  /users/{user}/goals/{id}:
    get:
      summary: Get a single goal
      x-mojo-to: Goal#get
      parameters:
        - $ref: "#/components/parameters/UserID"
        - $ref: "#/components/parameters/SubjectID"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Goal"
  /users/{user}/summary:
    get:
      summary: Get basic activity/event information for a user
      x-mojo-to: User#get_summary
      parameters:
        - $ref: "#/components/parameters/UserID"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/User"
                  recentActivities:
                    type: array
                    items:
                      $ref: "#/components/schemas/Activity"
                  events:
                    type: array
                    items:
                      $ref: "#/components/schemas/RegisteredEvent"
components:
  parameters:
    UserID:
      in: path
      name: user
      required: true
      description: The ID number of the user
      schema:
        type: integer
        minimum: 1
    SubjectID:
      in: path
      name: id
      required: true
      description: The ID number of the endpoint subject
      schema:
        type: integer
        minimum: 1
  schemas:
    Descriptoid:
      type: object
      properties:
        id:
          type: integer
        description:
          type: string
    Activity:
      type: object
      properties:
        id:
          type: integer
        activityType:
          $ref: "#/components/schemas/Descriptoid"
        startTime:
          type: string
          format: date-time
        distance:
          $ref: "#/components/schemas/Amount"
        result:
          $ref: "#/components/schemas/ActivityResult"
        event:
          $ref: "#/components/schemas/Event"
        temperature:
          nullable: true
          type: number
        note:
          nullable: true
          type: string
        wholeActivity:
          $ref: "#/components/schemas/Activity"
        priorDistancePR:
          $ref: "#/components/schemas/Activity"
        records:
          type: array
          items:
            $ref: "#/components/schemas/Goal"
    ActivityResult:
      type: object
      properties:
        id:
          type: integer
        grossTime:
          type: string
          format: time
          nullable: true
        netTime:
          type: string
          format: time
        pace:
          type: string
          format: time
        speed:
          $ref: "#/components/schemas/Amount"
        heartRate:
          nullable: true
          type: integer
    Address:
      type: object
      properties:
        id:
          type: integer
        street1:
          type: string
          nullable: true
        street2:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        zip:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
    Division:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
        name:
          type: string
        finishers:
          type: integer
    Donation:
      type: object
      required:
        - amount
        - date
        - person
        - address
      properties:
        id:
          type: integer
        amount:
          type: number
        date:
          type: string
          format: date-time
        person:
          $ref: "#/components/schemas/Person"
        address:
          $ref: "#/components/schemas/Address"
    Event:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
        name:
          type: string
        url:
          type: string
          format: uri
          nullable: true
        scheduledStart:
          type: string
          format: date-time
        entrants:
          type: integer
          nullable: true
        countdown:
          $ref: "#/components/schemas/Duration"
        eventType:
          $ref: "#/components/schemas/EventType"
        distance:
          $ref: "#/components/schemas/Amount"
        address:
          $ref: "#/components/schemas/Address"
        eventSequenceID:
          type: integer
          nullable: true
    EventNavigation:
      type: object
      properties:
        next:
          $ref: "#/components/schemas/Event"
        prev:
          $ref: "#/components/schemas/Event"
    EventLinks:
      type: object
      properties:
        event:
          $ref: "#/components/schemas/EventNavigation"
        series:
          $ref: "#/components/schemas/EventNavigation"
        sequence:
          $ref: "#/components/schemas/EventNavigation"
    EventRegistration:
      type: object
      required:
        - user
        - isPublic
      properties:
        eventID:
          type: integer
        user:
          $ref: "#/components/schemas/User"
        fee:
          type: number
          nullable: true
        registered:
          type: boolean
          nullable: true
        bibNumber:
          type: integer
          nullable: true
        isPublic:
          type: boolean
        fundraising:
          $ref: "#/components/schemas/Fundraising"
    EventResult:
      type: object
      required:
        - groups
      properties:
        url:
          type: string
          format: uri
          nullable: true
        groups:
          type: array
          items:
            $ref: "#/components/schemas/EventResultGroup"
    EventResultGroup:
      type: object
      required:
        - place
        - finishers
        - percentile
      properties:
        place:
          type: integer
        finishers:
          type: integer
        percentile:
          type: number
        division:
          type: string
        gender:
          type: string
    EventSeries:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        year:
          type: integer
    EventType:
      type: object
      required:
        - id
        - activityType
        - description
      properties:
        id:
          type: integer
        activityType:
          $ref: "#/components/schemas/Descriptoid"
        description:
          type: string
    Fundraising:
      type: object
      required:
        - minimum
        - total
      properties:
        minimum:
          type: number
        total:
          type: number
        donations:
          type: array
          items:
            $ref: "#/components/schemas/Donation"
    Goal:
      type: object
      required:
        - dimension
        - name
      properties:
        id:
          type: integer
        name:
          type: string
        activityType:
          $ref: "#/components/schemas/Descriptoid"
        dimension:
          type: string
        isPR:
          type: boolean
        count:
          type: integer
        fulfillments:
          type: array
          items:
            $ref: "#/components/schemas/GoalRecord"
    GoalRecord:
      type: object
      required:
        - description
        - isCurrent
        - value
      properties:
        description:
          type: string
        isCurrent:
          type: boolean
        value:
          anyOf:
            - $ref: "#/components/schemas/Amount"
            - $ref: "#/components/schemas/Duration"
    Person:
      type: object
      required:
        - firstname
        - lastname
      properties:
        id:
          type: integer
        firstname:
          type: string
        lastname:
          type: string
    RegisteredEvent:
      required:
        - registration
        - event
      type: object
      properties:
        registration:
          $ref: "#/components/schemas/EventRegistration"
        event:
          $ref: "#/components/schemas/Event"
        activity:
          $ref: "#/components/schemas/Activity"
        results:
          $ref: "#/components/schemas/EventResult"
    Location:
      type: object
      required:
        - latitude
        - longitude
      properties:
        id:
          type: integer
        latitude:
          type: number
        longitude:
          type: number
    UnitOfMeasure:
      type: object
      required:
        - unit
        - abbreviation
        - normalizationFactor
      properties:
        id:
          type: integer
        unit:
          type: string
        abbreviation:
          type: string
        normalizationFactor:
          type: number
    User:
      type: object
      required:
        - username
        - person
      properties:
        id:
          type: integer
        username:
          type: string
        person:
          $ref: "#/components/schemas/Person"
        location:
          $ref: "#/components/schemas/Location"
    Amount:
      type: object
      required:
        - quantity
      properties:
        quantity:
          $ref: "#/components/schemas/DimensionedQuantity"
        normalizedQuantity:
          $ref: "#/components/schemas/DimensionedQuantity"
    DimensionedQuantity:
      type: object
      required:
        - value
        - units
      properties:
        value:
          type: number
        units:
          $ref: "#/components/schemas/UnitOfMeasure"
    Duration:
      type: object
      properties:
        years:
          type: number
        months:
          type: number
        weeks:
          type: number
        days:
          type: number
        hours:
          type: number
        minutes:
          type: number
        seconds:
          type: number
    Pagination:
      type: object
      properties:
        page:
          type: integer
        perPage:
          type: integer
        count:
          type: integer
    LoginSession:
      type: object
      required:
        - user
        - expiration
      properties:
        user:
          $ref: "#/components/schemas/User"
        expiration:
          type: string
          format: date-time
        roles:
          type: array
          items:
            type: string

  securitySchemes:
    auth:
      type: http
      scheme: basic
    admin:
      type: apiKey
      name: mojolicious
      in: cookie
    user:
      type: apiKey
      name: mojolicious
      in: cookie
